//Time - O(n)
// target to x 
// array has +ve / -ve 
// Prefix Sums 
// map(sum, index)

class Pair{

    private int x;
    private int y;

    Pair(int x, int y){
       this.x = x;
       this.y = y;
    }

    public String toString(){
       return (this.x +" "+ this.y);
    }
}

public class MyClass {
   
    public static void main(String args[]) {
      int[] arr = {-1,2,1,-4,2,3,-1,2};
      int target = 2;
      System.out.println(subArrayPrefixSumZero(arr,target));
    }
    
    public static Pair subArrayPrefixSumZero(int[] arr, int x){
        
        int sum = 0;
        int len = arr.length;
        java.util.Map<Integer,Integer> sumMap = new java.util.HashMap<>();
        for(int i=0;i<len;i++){
            sum = sum + arr[i];
            // this is not needed i guess - i dont know why he has in
            // if (sum == 0)
            //   return (new Pair(0,i));
            // Imp
             if (sumMap.containsKey(sum))
               return (new Pair(sumMap.get(sum)+1, i));
             sumMap.put(sum,i);
        }
        
        return null;
           
    }
    
}



