// T-O(n)
// Subarray Sum Problems
//Finding the subarray with the maximum sum 
// includes +ve & -ve Numbers 
// no empty Subarrays
// KADANE'S Algorithm 
//To Clarify :
//1. Do you mean a contiguous Subarry ?
//2. Does this include empty subarray ?

public class MyClass {
   
    public static void main(String args[]) {

    int arr[] = { -2,-3,4,-1,-2,1,5,-1 };
    System.out.println(maxSum(arr));
    
    }
    
    public static int maxSum(int a[]){
        int result = a[0];
        int maxEndingHere = a[0];
        int n = a.length;
        int temp = 0;
        // Imp Point
        for (int i=1; i<n;i++){
            if (a[i]>(a[i]+maxEndingHere))
              maxEndingHere = a[i];
            else 
              maxEndingHere = a[i]+maxEndingHere;
            if (maxEndingHere > result)  
              result = maxEndingHere;
        }
        return result;
    }
        
}
    
